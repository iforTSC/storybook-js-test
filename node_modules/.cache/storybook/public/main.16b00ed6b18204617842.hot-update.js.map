{"version":3,"file":"main.16b00ed6b18204617842.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;;AACA;AACA;AACA;AAFA;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AAEA;AACA;AACA;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAUA;AAdA;AAcA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AArBA;AAwBA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://storybook-test/./src/stories/SideMenu.stories.jsx","webpack://storybook-test/./src/stories/Button.jsx","webpack://storybook-test/./src/stories/SideMenu.jsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\n\\r\\nimport SideMenu from './SideMenu';\\r\\nimport * as ButtonStories from './Button.stories';\\r\\nexport default {\\r\\n  component: SideMenu,\\r\\n  title: 'Example/SideMenu',\\r\\n  };\\r\\n\\r\\nconst Template = args => <SideMenu {...args} />;\\r\\n//console.log(...ButtonStories.Primary.args.button)\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n  // Shaping the stories through args composition.\\r\\n  // The data was inherited from the Primary story in Button.stories.js.\\r\\n \\r\\n  buttons: [\\r\\n      {id:'x', ...ButtonStories.Menu.args},\\r\\n      {id:'y', ...ButtonStories.Menu.args},\\r\\n      {id:'z', ...ButtonStories.Menu.args},\\r\\n      {id:'u', ...ButtonStories.Menu.args},\\r\\n      {id:'v', ...ButtonStories.Menu.args},\\r\\n      {id:'w', ...ButtonStories.Menu.args}\\r\\n  ]\\r\\n};\\r\\n/*\\r\\nexport const Loading = Template.bind({});\\r\\nLoading.args = {\\r\\n  buttons: [],\\r\\n  loading: true,\\r\\n};\\r\\n\\r\\n\\r\\nexport const Empty = Template.bind({});\\r\\nEmpty.args = {\\r\\n  // Shaping the stories through args composition.\\r\\n  // Inherited data coming from the Loading story.\\r\\n  ...Loading.args,\\r\\n  loading: false,\\r\\n};*/\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":17,\"line\":10},\"endLoc\":{\"col\":47,\"line\":10},\"startBody\":{\"col\":17,\"line\":10},\"endBody\":{\"col\":47,\"line\":10}}};\n    \nimport React from 'react';\r\n\r\nimport SideMenu from './SideMenu';\r\nimport * as ButtonStories from './Button.stories';\r\nexport default {\r\n  component: SideMenu,\r\n  title: 'Example/SideMenu',\r\n  };\r\n\r\nconst Template = args => <SideMenu {...args} />;\r\n//console.log(...ButtonStories.Primary.args.button)\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  // Shaping the stories through args composition.\r\n  // The data was inherited from the Primary story in Button.stories.js.\r\n \r\n  buttons: [\r\n      {id:'x', ...ButtonStories.Menu.args},\r\n      {id:'y', ...ButtonStories.Menu.args},\r\n      {id:'z', ...ButtonStories.Menu.args},\r\n      {id:'u', ...ButtonStories.Menu.args},\r\n      {id:'v', ...ButtonStories.Menu.args},\r\n      {id:'w', ...ButtonStories.Menu.args}\r\n  ]\r\n};\r\n/*\r\nexport const Loading = Template.bind({});\r\nLoading.args = {\r\n  buttons: [],\r\n  loading: true,\r\n};\r\n\r\n\r\nexport const Empty = Template.bind({});\r\nEmpty.args = {\r\n  // Shaping the stories through args composition.\r\n  // Inherited data coming from the Loading story.\r\n  ...Loading.args,\r\n  loading: false,\r\n};*/\n\n\nDefault.parameters = { storySource: { source: \"args => <SideMenu {...args} />\" }, ...Default.parameters };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.css';\n\n/**\n * Primary UI component for user interaction\n */\n\n\nexport default function Button({ primary, backgroundColor, size, label,buttonIcon, menu, ...props })  {\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  const inline = menu ? 'storybook-button--block' : '';\n  return (\n    <button\n      type=\"button\"\n      className={['storybook-button', `storybook-button--${size}`, mode, inline].join(' ')}\n      style={backgroundColor && { backgroundColor }}\n      {...props}\n    >\n      {label}\n      {buttonIcon!==null?<span>{buttonIcon}</span>:\"\"}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  buttonIcon: PropTypes.string,\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: true,\n  size: 'medium',\n  onClick: undefined,\n  buttonIcon: null,\n};\n","/*import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nexport default function SideMenu({ loading, buttons })\r\n{\r\n \r\n  if (loading) {\r\n    return <div className=\"side-menu\">loading</div>;\r\n  }\r\n\r\n  if (buttons.length === 0) {\r\n    return <div className=\"side-menu\">empty</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"side-menu\">\r\n      {buttons.map((button,index) => (<>\r\n  <Button key={button.id} {...button} />\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n}*/"],"names":[],"sourceRoot":""}