{"ast":null,"code":"var _jsxFileName = \"C:\\\\storybook-test\\\\src\\\\stories\\\\Button.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.css';\n/**\n * Primary UI component for user interaction\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function (_ref) {\n  let {\n    primary,\n    backgroundColor,\n    size,\n    label,\n    buttonIcon,\n    ...props\n  } = _ref;\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: ['storybook-button', `storybook-button--${size}`, mode].join(' '),\n    style: backgroundColor && {\n      backgroundColor\n    },\n    ...props,\n    children: [label, buttonIcon !== null ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: buttonIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 26\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n;\nButton.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  buttonIcon: PropTypes.string,\n\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func\n};\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: 'medium',\n  onClick: undefined,\n  buttonIcon: null,\n  label: 'click me'\n};","map":{"version":3,"sources":["C:/storybook-test/src/stories/Button.jsx"],"names":["React","PropTypes","primary","backgroundColor","size","label","buttonIcon","props","mode","join","Button","propTypes","bool","string","oneOf","isRequired","onClick","func","defaultProps","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AAEA;AACA;AACA;;;AAGA,eAAe,gBAAyE;AAAA,MAAhE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,eAAX;AAA4BC,IAAAA,IAA5B;AAAkCC,IAAAA,KAAlC;AAAwCC,IAAAA,UAAxC;AAAoD,OAAGC;AAAvD,GAAgE;AACtF,QAAMC,IAAI,GAAGN,OAAO,GAAG,2BAAH,GAAiC,6BAArD;AACA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAE,CAAC,kBAAD,EAAsB,qBAAoBE,IAAK,EAA/C,EAAkDI,IAAlD,EAAwDC,IAAxD,CAA6D,GAA7D,CAFb;AAGE,IAAA,KAAK,EAAEN,eAAe,IAAI;AAAEA,MAAAA;AAAF,KAH5B;AAAA,OAIMI,KAJN;AAAA,eAMGF,KANH,EAOGC,UAAU,KAAG,IAAb,gBAAkB;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YAAlB,GAA4C,EAP/C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;AAAA;AAEDI,MAAM,CAACC,SAAP,GAAmB;AACjB;AACF;AACA;AACET,EAAAA,OAAO,EAAED,SAAS,CAACW,IAJF;;AAKjB;AACF;AACA;AACET,EAAAA,eAAe,EAAEF,SAAS,CAACY,MARV;AASjBP,EAAAA,UAAU,EAAEL,SAAS,CAACY,MATL;;AAUjB;AACF;AACA;AACET,EAAAA,IAAI,EAAEH,SAAS,CAACa,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CAbW;;AAcjB;AACF;AACA;AACET,EAAAA,KAAK,EAAEJ,SAAS,CAACY,MAAV,CAAiBE,UAjBP;;AAkBjB;AACF;AACA;AACEC,EAAAA,OAAO,EAAEf,SAAS,CAACgB;AArBF,CAAnB;AAwBAP,MAAM,CAACQ,YAAP,GAAsB;AACpBf,EAAAA,eAAe,EAAE,IADG;AAEpBD,EAAAA,OAAO,EAAE,KAFW;AAGpBE,EAAAA,IAAI,EAAE,QAHc;AAIpBY,EAAAA,OAAO,EAAEG,SAJW;AAKpBb,EAAAA,UAAU,EAAE,IALQ;AAMpBD,EAAAA,KAAK,EAAC;AANc,CAAtB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.css';\n\n/**\n * Primary UI component for user interaction\n */\n\n\nexport default function({ primary, backgroundColor, size, label,buttonIcon, ...props }) {\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return (\n    <button\n      type=\"button\"\n      className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n      style={backgroundColor && { backgroundColor }}\n      {...props}\n    >\n      {label}\n      {buttonIcon!==null?<span>{buttonIcon}</span>:\"\"}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  buttonIcon: PropTypes.string,\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: 'medium',\n  onClick: undefined,\n  buttonIcon: null,\n  label:'click me'\n};\n"]},"metadata":{},"sourceType":"module"}