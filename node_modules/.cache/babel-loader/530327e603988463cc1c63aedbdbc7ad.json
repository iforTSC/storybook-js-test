{"ast":null,"code":"var _jsxFileName = \"C:\\\\storybook-test\\\\src\\\\stories\\\\SideMenu.jsx\";\nimport React from 'react';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskList(_ref) {\n  let {\n    loading,\n    buttons\n  } = _ref;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-menu\",\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (buttons.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-menu\",\n      children: \"empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"side-menu\",\n    children: buttons.map((button, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, { ...button\n      }, button.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 3\n      }, this)\n    }, void 0, false))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");\nTaskList.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TaskList\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\stories\\\\SideMenu.jsx\"] = {\n    name: \"TaskList\",\n    docgenInfo: TaskList.__docgenInfo,\n    path: \"src\\\\stories\\\\SideMenu.jsx\"\n  };\n}","map":{"version":3,"sources":["C:/storybook-test/src/stories/SideMenu.jsx"],"names":["React","Button","TaskList","loading","buttons","length","map","button","index","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;;;AAGA,eAAe,SAASC,QAAT,OACf;AAAA,MADkC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAClC;;AAEE,MAAID,OAAJ,EAAa;AACX,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIC,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;AACxB,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGD,OAAO,CAACE,GAAR,CAAY,CAACC,MAAD,EAAQC,KAAR,kBAAmB;AAAA,6BACpC,QAAC,MAAD,OAA4BD;AAA5B,SAAaA,MAAM,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA;AADoC,qBAA/B;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;KAnBuBP,Q","sourcesContent":["import React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\n\r\nexport default function TaskList ({ loading, buttons }) \r\n{\r\n \r\n  if (loading) {\r\n    return <div className=\"side-menu\">loading</div>;\r\n  }\r\n\r\n  if (buttons.length === 0) {\r\n    return <div className=\"side-menu\">empty</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"side-menu\">\r\n      {buttons.map((button,index) => (<>\r\n  <Button key={button.id} {...button} />\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}