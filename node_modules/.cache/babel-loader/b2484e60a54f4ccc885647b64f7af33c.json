{"ast":null,"code":"var _jsxFileName = \"C:\\\\storybook-test\\\\src\\\\stories\\\\Button.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.css';\n/**\n * Primary UI component for user interaction\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Button(_ref) {\n  let {\n    primary,\n    backgroundColor,\n    size,\n    label,\n    buttonIcon,\n\n    /*menu,*/\n    ...props\n  } = _ref;\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  const inline =\n  /*menu ? */\n  'storybook-button--block'\n  /*: ''*/\n  ;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: ['storybook-button', `storybook-button--${size}`, mode, inline].join(' '),\n    style: backgroundColor && {\n      backgroundColor\n    },\n    ...props,\n    children: [label, buttonIcon !== null ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: buttonIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 26\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = Button;\n;\nButton.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  buttonIcon: PropTypes.string,\n\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func\n};\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: true,\n  size: 'medium',\n  onClick: undefined,\n  buttonIcon: null\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");\nButton.__docgenInfo = {\n  \"description\": \"Primary UI component for user interaction\",\n  \"methods\": [],\n  \"displayName\": \"Button\",\n  \"props\": {\n    \"backgroundColor\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"What background color to use\"\n    },\n    \"primary\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Is this the principal call to action on the page?\"\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'medium'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'small'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'medium'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'large'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"How large should the button be?\"\n    },\n    \"onClick\": {\n      \"defaultValue\": {\n        \"value\": \"undefined\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Optional click handler\"\n    },\n    \"buttonIcon\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Button contents\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\stories\\\\Button.jsx\"] = {\n    name: \"Button\",\n    docgenInfo: Button.__docgenInfo,\n    path: \"src\\\\stories\\\\Button.jsx\"\n  };\n}","map":{"version":3,"sources":["C:/storybook-test/src/stories/Button.jsx"],"names":["React","PropTypes","Button","primary","backgroundColor","size","label","buttonIcon","props","mode","inline","join","propTypes","bool","string","oneOf","isRequired","onClick","func","defaultProps","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AAEA;AACA;AACA;;;AAGA,eAAe,SAASC,MAAT,OAA2F;AAAA,MAA3E;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,eAAX;AAA4BC,IAAAA,IAA5B;AAAkCC,IAAAA,KAAlC;AAAwCC,IAAAA,UAAxC;;AAAoD;AAAU,OAAGC;AAAjE,GAA2E;AACxG,QAAMC,IAAI,GAAGN,OAAO,GAAG,2BAAH,GAAiC,6BAArD;AACA,QAAMO,MAAM;AAAG;AAAW;AAA0B;AAApD;AACA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAE,CAAC,kBAAD,EAAsB,qBAAoBL,IAAK,EAA/C,EAAkDI,IAAlD,EAAwDC,MAAxD,EAAgEC,IAAhE,CAAqE,GAArE,CAFb;AAGE,IAAA,KAAK,EAAEP,eAAe,IAAI;AAAEA,MAAAA;AAAF,KAH5B;AAAA,OAIMI,KAJN;AAAA,eAMGF,KANH,EAOGC,UAAU,KAAG,IAAb,gBAAkB;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YAAlB,GAA4C,EAP/C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;KAduBL,M;AAcvB;AAEDA,MAAM,CAACU,SAAP,GAAmB;AACjB;AACF;AACA;AACET,EAAAA,OAAO,EAAEF,SAAS,CAACY,IAJF;;AAKjB;AACF;AACA;AACET,EAAAA,eAAe,EAAEH,SAAS,CAACa,MARV;AASjBP,EAAAA,UAAU,EAAEN,SAAS,CAACa,MATL;;AAUjB;AACF;AACA;AACET,EAAAA,IAAI,EAAEJ,SAAS,CAACc,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CAbW;;AAcjB;AACF;AACA;AACET,EAAAA,KAAK,EAAEL,SAAS,CAACa,MAAV,CAAiBE,UAjBP;;AAkBjB;AACF;AACA;AACEC,EAAAA,OAAO,EAAEhB,SAAS,CAACiB;AArBF,CAAnB;AAwBAhB,MAAM,CAACiB,YAAP,GAAsB;AACpBf,EAAAA,eAAe,EAAE,IADG;AAEpBD,EAAAA,OAAO,EAAE,IAFW;AAGpBE,EAAAA,IAAI,EAAE,QAHc;AAIpBY,EAAAA,OAAO,EAAEG,SAJW;AAKpBb,EAAAA,UAAU,EAAE;AALQ,CAAtB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.css';\n\n/**\n * Primary UI component for user interaction\n */\n\n\nexport default function Button({ primary, backgroundColor, size, label,buttonIcon, /*menu,*/ ...props })  {\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  const inline = /*menu ? */'storybook-button--block' /*: ''*/;\n  return (\n    <button\n      type=\"button\"\n      className={['storybook-button', `storybook-button--${size}`, mode, inline].join(' ')}\n      style={backgroundColor && { backgroundColor }}\n      {...props}\n    >\n      {label}\n      {buttonIcon!==null?<span>{buttonIcon}</span>:\"\"}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  buttonIcon: PropTypes.string,\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: true,\n  size: 'medium',\n  onClick: undefined,\n  buttonIcon: null,\n};\n"]},"metadata":{},"sourceType":"module"}