{"ast":null,"code":"import _objectSpread from\"C:/storybook-test/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import logo from'./logo.svg';import'./App.css';import{Button}from'./stories/Button';/*\nfunction App() {\n  return (\n    <div className=\"App\">\n  <Button\n  backgroundColor=\"#0078A7\"\n  label=\"Do something\"\n  onClick={() => {}}\n  primary\n/>\n    </div>\n  );\n}\n*/import{jsx as _jsx}from\"react/jsx-runtime\";export default{/* üëá The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */title:'Button',component:Button};//üëá We create a ‚Äútemplate‚Äù of how args map to rendering\nvar Template=function Template(args){return/*#__PURE__*/_jsx(Button,_objectSpread({},args));};//üëá Each story then reuses that template\nexport var Primary=Template.bind({});Primary.args={primary:true,label:'Button'};/*\nexport default App;*/","map":{"version":3,"sources":["C:/storybook-test/src/App.js"],"names":["logo","Button","title","component","Template","args","Primary","bind","primary","label"],"mappings":"sGAAA,MAAOA,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAO,WAAP,CAEA,OAASC,MAAT,KAAuB,kBAAvB,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E,2CAEA,cAAe,CACb;AACF;AACA;AACA,IACEC,KAAK,CAAE,QALM,CAMbC,SAAS,CAAEF,MANE,CAAf,CASA;AACA,GAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,qBAAU,KAAC,MAAD,kBAAYA,IAAZ,EAAV,EAAjB,CAEA;AACA,MAAO,IAAMC,CAAAA,OAAO,CAAGF,QAAQ,CAACG,IAAT,CAAc,EAAd,CAAhB,CACPD,OAAO,CAACD,IAAR,CAAe,CACZG,OAAO,CAAE,IADG,CAEZC,KAAK,CAAE,QAFK,CAAf,CAKA;AACA","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport { Button } from './stories/Button';\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n  <Button\n  backgroundColor=\"#0078A7\"\n  label=\"Do something\"\n  onClick={() => {}}\n  primary\n/>\n    </div>\n  );\n}\n*/\n\nexport default {\n  /* üëá The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'Button',\n  component: Button,\n};\n\n//üëá We create a ‚Äútemplate‚Äù of how args map to rendering\nconst Template = (args) => <Button {...args} />;\n\n//üëá Each story then reuses that template\nexport const Primary = Template.bind({});\nPrimary.args = {\n   primary: true,\n   label: 'Button',\n};\n\n/*\nexport default App;*/\n"]},"metadata":{},"sourceType":"module"}